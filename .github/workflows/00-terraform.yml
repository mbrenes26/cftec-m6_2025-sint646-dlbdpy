name: 'Step00 - Terraform CI/CD'

# 🛡️ Modo protegido por defecto: solo ejecución manual
on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Escribe "yes" para confirmar la ejecución de Terraform'
        required: true
        default: 'no'

# 🚧 Comentado: activación automática por push/pull_request (para reactivar si se desea)
# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# 🧠 Cómo reactivarlo en modo automático cuando lo necesites:
# Elimina el bloque workflow_dispatch
# Descomenta el bloque push / pull_request
# Elimina la validación de github.event.inputs.confirm si deseas ejecución automática sin confirmación

permissions:
  id-token: write
  contents: read

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}
  TF_VAR_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
  TF_VAR_xdc-c360-github-actions_obj_id: ${{ secrets.AZURE_CLIENT_ID }}
  TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}

jobs:
  terraform:
    if: github.ref == 'refs/heads/main' && github.event.inputs.confirm == 'yes'
    runs-on: ubuntu-latest
    environment: production  # Requiere aprobación manual si configurado en GitHub > Environments

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: 📦 Terraform Init
        run: terraform -chdir=terraform init

      - name: 🎨 Terraform Format Check
        run: terraform -chdir=terraform fmt -check

      - name: 🔎 Terraform Validate
        run: terraform -chdir=terraform validate

      - name: 📝 Terraform Plan
        run: terraform -chdir=terraform plan -input=false

      - name: 🚀 Terraform Apply
        run: terraform -chdir=terraform apply -auto-approve -input=false
