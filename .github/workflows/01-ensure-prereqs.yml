name: Step01 - Ensure Prereqs

on:
  workflow_dispatch:
    inputs:
      app_user:
        description: "Usuario no root para Jupyter/tmux"
        required: false
        default: "azureuser"

permissions:
  id-token: write
  contents: read

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  RESOURCE_GROUP: rg-cftec-m62025-SINT646
  VM_NAME: vm-cftec-m62025-SINT646-labs

jobs:
  ensure-prereqs:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure CLI Login (Service Principal)
        shell: bash
        run: |
          set -euo pipefail
          az login --service-principal \
            --username "$ARM_CLIENT_ID" \
            --password "$ARM_CLIENT_SECRET" \
            --tenant "$ARM_TENANT_ID"
          az account set --subscription "$ARM_SUBSCRIPTION_ID"

      - name: Wait for cloud-init to finish (best effort)
        shell: bash
        run: |
          set -euo pipefail
          az vm run-command invoke \
            --resource-group "$RESOURCE_GROUP" \
            --name "$VM_NAME" \
            --command-id RunShellScript \
            --scripts 'cloud-init status --wait --long || true' \
            --query "value[0].message" -o tsv

      - name: Install prerequisites on VM (idempotent)
        shell: bash
        run: |
          set -euo pipefail
          az vm run-command invoke \
            --resource-group "$RESOURCE_GROUP" \
            --name "$VM_NAME" \
            --command-id RunShellScript \
            --scripts @"$GITHUB_WORKSPACE/scripts/install_lab_prereqs.sh" \
            --parameters "${{ inputs.app_user }}" \
            --query "value[0].message" -o tsv

      - name: Quick verify (docker/jupyter/tmux)
        shell: bash
        run: |
          set -euo pipefail
          az vm run-command invoke \
            --resource-group "$RESOURCE_GROUP" \
            --name "$VM_NAME" \
            --command-id RunShellScript \
            --scripts '
              set -e
              echo "== docker =="
              docker --version || true
              systemctl is-active docker || true
              echo "== tmux =="
              tmux -V || true
              echo "== jupyter (as ${{ inputs.app_user }}) =="
              su - ${{ inputs.app_user }} -c "jupyter --version || true"
            ' \
            --query "value[0].message" -o tsv
